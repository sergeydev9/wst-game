FROM node:14 as build
WORKDIR /app

COPY package.json .
COPY yarn.lock .
RUN yarn install

COPY . .
RUN yarn build api
RUN yarn build socket-server



FROM node:14-alpine as api
WORKDIR /app

COPY --from=build /app/dist/apps/api/* .
RUN npm install --production

# not in package.json generated by `nx build` but needed
RUN npm install pg@^8.6.0

ENV NODE_ENV=production
ENV PORT=4000

EXPOSE ${PORT}
CMD [ "node", "main.js" ]



FROM node:14-alpine as socket-server
WORKDIR /app

COPY --from=build /app/dist/apps/socket-server/* .
RUN npm install --production

# not in package.json generated by `nx build` but needed
RUN npm install pg@^8.6.0 tslib@^2.0.0

ENV NODE_ENV=production
ENV PORT=4001

EXPOSE ${PORT}
CMD [ "node", "main.js" ]